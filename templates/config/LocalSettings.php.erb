<?php

# This file was automatically generated by the MediaWiki installer.
# If you make manual changes, please keep track in case you need to
# recreate them later.

require_once( "includes/DefaultSettings.php" );

$wgSitename         = "<%= @sitename %>";
$wgServer           = "//<%= @server %>";
$wgCanonicalServer  = "<%= @canonical_server %>";

## * like $wgScriptPath, you must also localize everything that
$wgScriptPath       = '';
$wgScript           = "$wgScriptPath/index.php";
$wgRedirectScript   = "$wgScriptPath/redirect.php";
$wgStylePath        = "$wgScriptPath/skins";
$wgUploadPath       = "$wgScriptPath/images";
$wgUploadDirectory  = "$IP/images";

## If using PHP as a CGI module, use the ugly URLs
$wgArticlePath      = "$wgScript/$1";
# $wgArticlePath      = "$wgScript?title=$1";

#$wgStyleDirectory   = "$IP/stylesheets";
<% unless @image.to_s == 'absent' -%>
$wgLogo             = "/<%= @image %>";
<% else -%>
$wgLogo             = "/Wiki.png";
<% end -%>

$wgEnableEmail = <%= @real_wiki_options['enable_email'].to_s %>;
$wgEnableUserEmail = <%= @real_wiki_options['enable_user_email'].to_s %>;
$wgEmergencyContact = "<%= @contact %>";
$wgPasswordSender      = "<%= @contact %>";

## For a detailed description of the following switches see
## http://meta.wikimedia.org/Enotif and http://meta.wikimedia.org/Eauthent
## There are many more options for fine tuning available see
## /includes/DefaultSettings.php
## UPO means: this is also a user preference option
$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = <%= @real_wiki_options['email_authentication'].to_s %>;
$wgEmailConfirmToEdit = <%= @real_wiki_options['email_authentication'].to_s %>;


$wgDBserver         = "<%= @db_server %>";
$wgDBname           = "<%= @db_name %>";
$wgDBuser           = "<%= @real_db_user %>";
$wgDBpassword       = "<%= @real_db_pwd %>";
$wgDBadminuser      = "<%= @real_db_user %>";
$wgDBadminpassword  = "<%= @real_db_pwd %>";
$wgDBprefix         = "";

## To allow SQL queries through the wiki's Special:Askaql page,
## uncomment the next lines. THIS IS VERY INSECURE. If you want
## to allow semipublic read-only SQL access for your sysops,
## you should define a MySQL user with limited privileges.
## See MySQL docs: http://www.mysql.com/doc/en/GRANT.html
#
# $wgAllowSysopQueries = true;
# $wgDBsqluser        = "sqluser";
# $wgDBsqlpassword    = "sqlpass";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = false;

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = array();
#$wgUseTurckShm = function_exists( 'mmcache_get' ) && php_sapi_name() == 'apache';

## To enable image uploads, make sure the 'images' directory
## is writable, then uncomment this:
$wgEnableUploads       = true;
$wgUseImageResize       = true;
# $wgUseImageMagick = true;
# $wgImageMagickConvertCommand = "/usr/bin/convert";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
#$wgHashedUploadDirectory = false;
<% unless @hashed_upload_dir -%>
$wgHashedUploadDirectory = false;
<% end -%>

## If you have the appropriate support software installed
## you can enable inline LaTeX equations:
# $wgUseTeX         = true;
$wgMathPath         = "$wgUploadPath/math";
$wgMathDirectory    = "$wgUploadDirectory/math";
$wgTmpDirectory     = "$wgUploadDirectory/tmp";
putenv("TMPDIR=$IP/images/temp");

$wgLocalInterwiki   = $wgSitename;

$wgLanguageCode = "<%= @language %>";

$wgSecretKey = "<%= @real_secret_key %>";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook':
# $wgDefaultSkin = 'monobook';
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );

## Specify who can edit: true means only logged in users may edit pages
$wgWhitelistEdit = true;
$wgGroupPermissions['*']['edit'] = <%= @real_wiki_options['anyone_can_edit'] %>;
$wgGroupPermissions['*']['createaccount'] = <%= @real_wiki_options['anyone_can_register'] %>;

# Specify who may create new accounts: 0 means no, 1 means yes
$wgWhitelistAccount = array ( 'user' => 0, 'sysop' => 1, 'developer' => 1 );

<% if @file_extensions.to_s == 'absent' -%>
$wgFileExtensions = array( 'png', 'gif', 'jpg', 'jpeg', 'ogg', 'txt', 'pdf','patch','bz2', 'doc','zip', 'ods', 'odt', 'rtf' );
<% else -%>
$wgFileExtensions = array( '<%= @file_extensions.join("', '") %>' );
<% end -%>

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgEnableCreativeCommonsRdf = true;
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "http://www.gnu.org/copyleft/fdl.html";
$wgRightsText = "GNU Free Documentation License 1.2";
$wgRightsIcon = "${wgStylePath}/common/images/gnu-fdl.png";
# $wgRightsCode = "gfdl"; # Not yet used

$wgDiff3 = "";
<% unless @squid_servers.to_s == 'absent' -%>

$wgUseSquid = true;
$wgSquidServers = array(<%= "'#{@squid_servers.join("\', \'")}'" %>);
<% end -%>

$wgUseFileCache = true; /* default: false */
$wgFileCacheDirectory = "$IP/cache";
$wgShowIPinHeader = false;
# same value as suhosin default
$wgResourceLoaderMaxQueryLength = 512;

$wgMinimalPasswordLength = 8;
<% if @real_wiki_options['read_only'] -%>

$wgReadOnly = '<%= @real_wiki_options['read_only'] %>';
<% end -%>

$wgSecureLogin = true;

# enable extensions
wfLoadExtension( 'MobileFrontend' );
$wgMFAutodetectMobileView = true;
$wgMFDefaultSkinClass = 'SkinTimeless';
<%
unless @extensions == 'absent'
  @extensions.each do |extension| -%>
wfLoadExtension('<%= extension %>');
<%
  end
end
if @spam_protection
  [ 'Math', 'ConfirmEdit/MathCaptcha' ].each do |spam_ext|
    unless @extensions.include?(spam_ext) -%>
wfLoadExtension('<%= spam_ext %>');
<%  end
  end
end -%>
<% if @extensions.include?('WikiEditor') -%>

# Enables use of WikiEditor by default but still allow users to disable it in preferences
$wgDefaultUserOptions['usebetatoolbar'] = 1;
$wgDefaultUserOptions['usebetatoolbar-cgd'] = 1;

# Displays the Preview and Changes tabs
$wgDefaultUserOptions['wikieditor-preview'] = 1;

# Displays the Publish and Cancel buttons on the top right side
$wgDefaultUserOptions['wikieditor-publish'] = 1;
<% end -%>
<% if @extensions.include?('WYSIWYG') -%>

# WYSIWYG/WYSIWYG.php
$wgGroupPermissions['*']['wysiwyg']=true;
<% end -%>
<% if @real_wiki_options.key?('plain_options')
  plain_options = @real_wiki_options['plain_options']
  trocla_keys = plain_options.scan(/%%TROCLA_[\w_\-]+%%/)
  trocla_keys.each do |k|
    tk = k.match(/%%TROCLA_([\w_\-]+)%%/)[1]
    plain_options.gsub!(k,scope.call_function('trocla', ["mediawiki_#{@name}_#{tk}",'plain']))
  end
-%>

<%= plain_options %>
<% end -%>
?>
